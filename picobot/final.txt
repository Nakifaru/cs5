I tested each function and method while adding them.
I am using the top 10 percent as parents for the next generation.
I am picking two random parents from the top 10% percent of a generation, then picking rules a complete state. I making mutations in generations that are a multiple of 3.
My overall fittest evolved Picobot program has been 0.9621928166351607. The mutation at the third generation made the best fitness jump from 0.228 to 0.7901 and stayed high from there.

0 NExx -> W 3 
0 NxWx -> E 1 
0 Nxxx -> S 4 
0 xExS -> W 3 
0 xExx -> N 3 
0 xxWS -> N 0 
0 xxWx -> N 2 
0 xxxS -> E 3 
0 xxxx -> W 1 

1 NExx -> W 2 
1 NxWx -> E 1 
1 Nxxx -> W 2 
1 xExS -> N 4 
1 xExx -> N 0 
1 xxWS -> E 2 
1 xxWx -> S 0 
1 xxxS -> N 2 
1 xxxx -> W 2 

2 NExx -> S 4 
2 NxWx -> S 2 
2 Nxxx -> S 3 
2 xExS -> W 3 
2 xExx -> S 4 
2 xxWS -> E 4 
2 xxWx -> S 2 
2 xxxS -> E 0 
2 xxxx -> N 2 

3 NExx -> S 4 
3 NxWx -> S 4 
3 Nxxx -> W 3 
3 xExS -> W 3 
3 xExx -> N 0 
3 xxWS -> N 3 
3 xxWx -> N 1 
3 xxxS -> E 1 
3 xxxx -> E 4 

4 NExx -> S 3 
4 NxWx -> S 2 
4 Nxxx -> S 3 
4 xExS -> N 1 
4 xExx -> S 4 
4 xxWS -> N 0 
4 xxWx -> E 0 
4 xxxS -> E 1 
4 xxxx -> S 4